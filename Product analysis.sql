--PRODUCT AND INVENTORY ANALYSIS
--ANALYSIS
SELECT * FROM CATEGORIES;
SELECT * FROM CUSTOMERS;
SELECT * FROM EMPLOYEE_TERRITORIES;
SELECT * FROM EMPLOYEES;
SELECT * FROM ORDER_DETAILS;
SELECT * FROM ORDERS;
SELECT * FROM PRODUCTS;
SELECT * FROM REGION;
SELECT * FROM SHIPPERS;
SELECT * FROM SUPPLIERS;
SELECT * FROM TERRITORIES;
SELECT * FROM US_STATES;

--Number of products per category 

SELECT CATEGORY_ID,
	CATEGORY_NAME,
	COUNT (DISTINCT PRODUCT_ID) AS TOTAL_PRODUCTS
FROM CATEGORIES
INNER JOIN PRODUCTS USING (CATEGORY_ID)
GROUP BY 1,2
ORDER BY TOTAL_PRODUCTS DESC;

-- Products to be reordered 
SELECT PRODUCT_ID,
	PRODUCT_NAME,
	UNITS_IN_STOCK,
	UNITS_ON_ORDER, 
	REORDER_LEVEL, 
	DISCONTINUED
FROM PRODUCTS
WHERE (UNITS_IN_STOCK+UNITS_ON_ORDER) < REORDER_LEVEL AND DISCONTINUED = 0;

--Products never sold
SELECT PRODUCT_ID,
	PRODUCT_NAME
FROM PRODUCTS
LEFT JOIN ORDER_DETAILS USING (PRODUCT_ID)
WHERE ORDER_ID IS NULL;

--Most and least sold products

(SELECT PRODUCT_ID, 
	 PRODUCT_NAME,
	COUNT(DISTINCT ORDER_ID) AS SALE_FREQ,
	'MOST SOLD' AS CATEGORY
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
GROUP BY 1,2
ORDER BY SALE_FREQ DESC
LIMIT 10)
	
UNION ALL
	
(SELECT PRODUCT_ID, 
	 PRODUCT_NAME,
	COUNT(DISTINCT ORDER_ID) AS ORDER_FREQ,
	'LEAST SOLD' AS CATEGORY
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
GROUP BY 1,2
ORDER BY SALE_FREQ
LIMIT 10)	;

--Total quantity sold for each product
SELECT PRODUCT_ID, 
	 PRODUCT_NAME,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
GROUP BY 1,2
ORDER BY 1,2;

--Which categories perform better
SELECT CATEGORY_ID,
	CATEGORY_NAME,
	COUNT(DISTINCT ORDER_ID) AS ORDER_FREQ,
	SUM(R.QUANTITY) AS TOTAL_QUANTITY_SOLD,
	SUM(SELLING_PRICE) AS TOTAL_REVENUE
FROM REVENUE R
INNER JOIN ORDER_DETAILS O USING (ORDER_ID)
INNER JOIN PRODUCTS  P ON O.PRODUCT_ID = P.PRODUCT_ID
INNER JOIN CATEGORIES USING (CATEGORY_ID)
GROUP BY 1,2
ORDER BY 3 DESC,4 DESC, 5 DESC;

--Product performance by Category
SELECT CATEGORY_ID,
	CATEGORY_NAME,
	P.PRODUCT_ID,
	PRODUCT_NAME,
	COUNT(DISTINCT ORDER_ID) AS ORDER_FREQ,
	SUM(R.QUANTITY) AS TOTAL_QUANTITY_SOLD,
	SUM(SELLING_PRICE) AS TOTAL_REVENUE
FROM REVENUE R
INNER JOIN ORDER_DETAILS O USING (ORDER_ID)
INNER JOIN PRODUCTS  P ON O.PRODUCT_ID = P.PRODUCT_ID
INNER JOIN CATEGORIES USING (CATEGORY_ID)
GROUP BY 1,2,3,4
ORDER BY 5 DESC,6 DESC, 7 DESC;

--Average order quantity for each product 

SELECT PRODUCT_ID,
	PRODUCT_NAME,
	AVG(QUANTITY) AS AVERGAE_QUANTITY_PER_ORDER
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
GROUP BY 1, 2
ORDER BY 1,2,3;

--Suppliers providing top products by order freq
SELECT SUPPLIER_ID,
	 COMPANY_NAME,
	 PRODUCT_ID, 
	 PRODUCT_NAME,
	COUNT(DISTINCT ORDER_ID) AS SALE_FREQ,
	'MOST SOLD' AS CATEGORY
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
INNER JOIN SUPPLIERS USING (SUPPLIER_ID)
GROUP BY 1,2,3,4
ORDER BY SALE_FREQ DESC
LIMIT 10;


--Suppliers providing top products by quantity sold
SELECT SUPPLIER_ID,
	 COMPANY_NAME,
	 PRODUCT_ID, 
	 PRODUCT_NAME,
	 SUM(QUANTITY) AS TOTAL_QUANTITY,
	'MOST SOLD' AS CATEGORY
FROM ORDER_DETAILS
INNER JOIN PRODUCTS USING (PRODUCT_ID)
INNER JOIN SUPPLIERS USING (SUPPLIER_ID)
GROUP BY 1,2,3,4
ORDER BY TOTAL_QUANTITY DESC
LIMIT 10;



 








